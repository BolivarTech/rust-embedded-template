[build]
target = "thumbv7em-none-eabihf"

[unstable]
build-std = ["core"]

#[target.'cfg(all(target_arch = "arm", target_os = "none"))']
#runner = "probe-rs run --chip STM32G431R8"

[target.thumbv7em-none-eabihf]
#linker = "arm-none-eabi-ld"  # Uncomment if you want to use a custom linker
rustflags = [
    "-C", "link-arg=-Tlinker_low_stack.ld",  # Linker script
    "-C", "link-arg=-Map=output.map", # Map file for debugging
    "-C", "link-arg=-L./lib", # Additional library path
    # Add debug info
    # "-C", "debuginfo=2"
]
#runner = "probe-rs run --chip STM32G431R8"   # Block device runner becuase it goes to Debugger Console
#runner = "probe-rs download --chip STM32G431R8" # Just download the binary without running, J-link GDB server can be used for debugging
runner = "python flasher.py --chip STM32G431R8"  # Custom runner script for building, flashing and running

[env]
RUST_BACKTRACE = "1" # Enable backtraces for better error reporting
